{
    "name": "hellodocker",
    "version": "0.1.0",
    "description": "<Please describe your Image>",
    "author": "Firstname Lastname <firstname.lastname@your-domain> (https://your-domain)",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "git@github.com:xcompany/hellodocker.git"
    },
    "bugs": {
        "url": "https://github.com/xcompany/hellodocker/issues"
    },
    "homepage": "https://github.com/xcompany/hellodocker",
    "keywords": [
        "docker",
        "hellodocker"
    ],
    "config": {
        "image_name": "xcompany/hellodocker"
    },
    "devDependencies": {
        "appversion-mgr": "^0.7.0"
    },
    "scripts": {
        "dockerfile:XBUILD_BUILD_DATE": "echo \"$(sed -e \"s/__XBUILD_BUILD_DATE__/$(date -u +'%Y-%m-%dT%H:%M:%SZ')/g\" ./src/xcompany/hellodocker/Dockerfile.tmpl)\" > ./Dockerfile",
        "dockerfile:XBUILD_VCS_REF": "echo \"$(sed -e \"s/__XBUILD_VCS_REF__/$(git rev-parse --short HEAD)/g\" ./Dockerfile)\" > ./Dockerfile",
        "dockerfile:XBUILD_VERSION": "echo \"$(sed -e \"s/__XBUILD_VERSION__/$npm_package_version/g\" ./Dockerfile)\" > ./Dockerfile",
        "dockerfile:build": "yarn dockerfile:XBUILD_BUILD_DATE && yarn dockerfile:XBUILD_VCS_REF && yarn dockerfile:XBUILD_VERSION",
        "docker:clean:dev": "docker image rm -f xcompany/hellodocker:devcontainer",
        "docker:clean:image": "docker image rm -f $npm_package_config_image_name:$npm_package_version",
        "docker:clean:latest": "docker image rm -f $npm_package_config_image_name:latest",
        "docker:build": "docker build --tag $npm_package_config_image_name:$npm_package_version --force-rm .",
        "docker:tag": "docker image tag $npm_package_config_image_name:$npm_package_version $npm_package_config_image_name:latest",
        "clean": "docker system prune -f && yarn docker:clean:image && yarn docker:clean:latest && yarn docker:clean:dev",
        "prebuild": "appvmgr update build && yarn dockerfile:build",
        "build": "yarn docker:build",
        "postbuild": "yarn docker:tag && git add . && git commit -m 'Automatic Build Commit'",
        "test": "docker-compose -f ./.devcontainer/docker-compose.test.yml up",
        "release": "yarn build && appvmgr add-git-tag && git push --tags && git push --all"
    }
}
